{
  "apiKey": "apiKey",
  "example_widget": "window.dtn.localWeather.createLocalWeatherWidget;",
  "example_code": "    \"container\": \"#local-weather-widget\",\r\n    \"units\": \"Imperial\",\r\n    \"defaultLocation\": {\r\n       \"postalCode\": \"33101\",\r\n    },\r\n    \"stations\": [\r\n       {\r\n         \"id\": \"KTPH\",\r\n          \"displayName\": \"Station 1\"\r\n       },\r\n       {\r\n         \"id\": \"KSNA\",\r\n         \"displayName\": \"Station 2\"\r\n       }\r\n    ],\r\n    \"showStationsSelect\": true,\r\n    \"showPostalCodeInput\": true,\r\n    \"showForecast\": true,\r\n    \"showCurrentConditions\": true,\r\n    \"showWeatherDetails\": true,\r\n       callbacks:{\r\n         onStationChange: \"\",\r\n         onPostalCodeChange: \"\",\r\n         onWeatherChange: \"\"}",
  "preview": {
    "lib-name": "localWeather",
    "script": "./local-weather-widget.js",
    "function": "createLocalWeatherWidget",
    "workspaceId": "local-weather-widget-wrapper",
    "textareaId": "local-weather-widget-config",
    "widgetId": "local-weather-widget",
    "config": {
      "units": "'Imperial'",
      "defaultLocation": "{\"postalCode\": 33101}",
      "stations": "[{\"id\": \"KTPH\",\"displayName\": \"Station 1\"},{\"id\": \"KSNA\",\"displayName\": \"Station 2\" }]",
      "showStationsSelect": true,
      "showPostalCodeInput": true,
      "showForecast": true,
      "showCurrentConditions": true,
      "showWeatherDetails": true,
      "callbacks": {
        "onStationChange": "",
        "onPostalCodeChange": "",
        "onWeatherChange": ""
      }
    }
  },
  "sections": [
    {
      "section_title": "Example",
      "example": [
        {
          "workspaceId": "local-weather-widget-wrapper",
          "textareaId": "local-weather-widget-config",
          "widgetId": "local-weather-widget",
          "style": "style=\"height: 100%; width: 470px;\"",
          "example_code_start": "window.dtn.localWeather.createLocalWeatherWidget({\r\n",
          "example_code_end": "\r\n});"
        }
      ]
    },
    {
      "section_title": "Types",
      "doc": [
        {
          "shared": [{ "name": "units_type" }]
        },
        {
          "doc_title": "Coordinates",
          "doc_code": "type Coordinates = { latitude: number, longitude: number };",
          "doc_description": "This type describe coordinates data that may be used to supply the defaultLocation property."
        },
        {
          "doc_title": "PostalCode",
          "doc_code": "type PostalCode = { postalCode: string };",
          "doc_description": "This type describe postal code data that may be used to supply the defaultLocation property."
        },
        {
          "doc_title": "StationId",
          "doc_code": "type StationId = string;",
          "doc_description": "This type describe station id data that may be used to supply the defaultLocation property."
        },
        {
          "doc_title": "Station",
          "doc_code": "type Station = { id: StationId, displayName: string };",
          "doc_description": "This type describe station data that is needed in stations array property."
        },
        {
          "doc_title": "WeatherFields",
          "doc_code": "type WeatherFields = \r\n | \"TEMPERATURE\" \r\n | \"FEELS_LIKE\" \r\n | \"HUMIDITY\" \r\n | \"BAROMETER\" \r\n | \"DEW_POINT\" \r\n | \"WIND_DIRECTION\" \r\n | \"WIND_SPEED\" \r\n | \"PRECIP_TYPE\" \r\n | \"PRECIP_CHANCE\" \r\n | \"PRECIP_AMOUNT\" \r\n | \"EVAPOTRANSPIRATION\" \r\n | \"SUNRISE\" \r\n | \"SUNSET\" \r\n | \"OBSERVATION_OR_FORECAST\";",
          "doc_description": "These are the available weather fields that widget supports."
        }
      ]
    },
    {
      "section_title": "Configuration",
      "doc": [
        {
          "shared": [{ "name": "apiKey" }, { "name": "units" }, { "name": "container" }]
        },
        {
          "doc_title": "defaultLocation",
          "doc_code": "defaultLocation?: PostalCode | Coordinates | { stationId: StationId };",
          "doc_description": "If { postalCode: \"postal code value\" } object is passed in the configurations, the composite widget will be default populated with the data fetched by the specified postal code. If { stationId: \"station id value\"} object is passed in the configurations, the composite widget will be default populated with the data fetched by the station Id. If { latitude: \"latitude coordinates value\", longitude:  \"longitude coordinates value\"} object is passed in the configurations, the composite widget will be default populated with the data fetched by the specified latitude and longitude."
        },
        {
          "doc_title": "stations",
          "doc_code": "stations?: Station[];",
          "doc_description": "The list with stations that is going to be listed in the locations dropdown."
        },
        {
          "doc_title": "showStationsSelect",
          "doc_code": "showStationsSelect?: boolean;",
          "doc_description": "Whether the station select dropdown to be shown. Default set to true."
        },
        {
          "doc_title": "showPostalCodeInput",
          "doc_code": "showPostalCodeInput?: boolean;",
          "doc_description": "Whether the zip/postal code picker to be shown. Default set to true."
        },
        {
          "doc_title": "showForecast",
          "doc_code": "showForecast?: boolean;",
          "doc_description": "Whether the five days forecast section to be shown. Default set to true."
        },
        {
          "doc_title": "showCurrentConditions",
          "doc_code": "showCurrentConditions?: boolean;",
          "doc_description": "Whether the current conditions section to be shown. Default set to true."
        },
        {
          "doc_title": "showWeatherDetails",
          "doc_code": "showWeatherDetails?: boolean | WeatherFields[] = true",
          "doc_description": "The fields that can be turn ON/OFF from current conditions listed field. Default set to true."
        }
      ]
    },
    {
      "section_title": "Methods",
      "doc": [
        {
          "doc_title": "setLocation",
          "doc_code": "setLocation: (\r\n  location: PostalCode | Coordinates | { stationId: StationId }\r\n) => void;",
          "doc_description": "Set location and load the widget with it."
        }
      ]
    },
    {
      "section_title": "Callbacks",
      "doc": [
        {
          "doc_title": "onStationChange",
          "doc_code": "onStationChange: (newStation: Station) => void;",
          "doc_description": "This callback will be called whenever the station state changes. The callback takes a single argument which represents the new station state."
        },
        {
          "doc_title": "onPostalCodeChange",
          "doc_code": "onPostalCodeChange: (newPostalCode: PostalCode & Coordinates) => void;",
          "doc_description": "This callback will be called whenever the postal code state changes. The callback takes a single argument which represents the new postal code and coordinates state."
        },
        {
          "doc_title": "onWeatherChange",
          "doc_code": "onWeatherChange: (newCoordinates: Coordinates) => void;",
          "doc_description": "This callback will be called whenever the weather data state changes. The callback takes a single argument which represents the new coordinates state."
        }
      ]
    }
  ]
}
